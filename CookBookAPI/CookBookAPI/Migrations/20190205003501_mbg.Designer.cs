// <auto-generated />
using System;
using CookBookAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CookBookAPI.Migrations
{
    [DbContext(typeof(CookBookDbContext))]
    [Migration("20190205003501_mbg")]
    partial class mbg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CookBookAPI.Models.Ingredients", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IngredientID");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IngredientID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("CookBookAPI.Models.Instructions", b =>
                {
                    b.Property<int>("RecipeID");

                    b.Property<int>("StepNumberID");

                    b.Property<string>("Action");

                    b.HasKey("RecipeID", "StepNumberID");

                    b.HasIndex("RecipeID")
                        .IsUnique();

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("CookBookAPI.Models.RecipeIngredients", b =>
                {
                    b.Property<int>("RecipeID");

                    b.Property<int>("IngredientsID");

                    b.Property<string>("Quantity")
                        .HasColumnType("varchar(max)");

                    b.HasKey("RecipeID", "IngredientsID");

                    b.HasIndex("IngredientsID")
                        .IsUnique();

                    b.HasIndex("RecipeID")
                        .IsUnique();

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("CookBookAPI.Models.Recipes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("CookBookAPI.Models.Ingredients", b =>
                {
                    b.HasOne("CookBookAPI.Models.Ingredients", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID");
                });

            modelBuilder.Entity("CookBookAPI.Models.Instructions", b =>
                {
                    b.HasOne("CookBookAPI.Models.Recipes", "Recipe")
                        .WithOne("InstructionID")
                        .HasForeignKey("CookBookAPI.Models.Instructions", "RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CookBookAPI.Models.RecipeIngredients", b =>
                {
                    b.HasOne("CookBookAPI.Models.Ingredients", "Ingredients")
                        .WithOne("Recipe")
                        .HasForeignKey("CookBookAPI.Models.RecipeIngredients", "IngredientsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CookBookAPI.Models.Recipes", "Recipe")
                        .WithOne("IngredientID")
                        .HasForeignKey("CookBookAPI.Models.RecipeIngredients", "RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
